{
  "_from": "node-sync-ipc@2.1.2",
  "_id": "node-sync-ipc@2.1.2",
  "_inBundle": false,
  "_integrity": "sha1-i9f+30Gb6qEQSboqefdStwPitss=",
  "_location": "/node-sync-ipc",
  "_phantomChildren": {},
  "_requested": {
    "type": "version",
    "registry": true,
    "raw": "node-sync-ipc@2.1.2",
    "name": "node-sync-ipc",
    "escapedName": "node-sync-ipc",
    "rawSpec": "2.1.2",
    "saveSpec": null,
    "fetchSpec": "2.1.2"
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "http://r.tnpm.oa.com/node-sync-ipc/download/node-sync-ipc-2.1.2.tgz",
  "_shasum": "8bd7fedf419beaa11049ba2a79f752b703e2b6cb",
  "_spec": "node-sync-ipc@2.1.2",
  "_where": "E:\\code\\resources_win",
  "author": {
    "name": "mmhunter",
    "url": "http://mmhunter.com"
  },
  "bugs": {
    "url": "https://github.com/mmhunter/node-sync-ipc/issues"
  },
  "bundleDependencies": false,
  "dependencies": {
    "bindings": "^1.3.0",
    "nan": "^2.7.0"
  },
  "deprecated": false,
  "description": "node-sync-ipc is a tiny library making it possible for child node.js processes created by child_process.fork to send synchronous message to parent process. It can block the child process until the parent make a response. This use case is kind of rare but I hope it can be of some help if anyone needs.",
  "devDependencies": {
    "@types/node": "^9.6.0",
    "mocha": "^5.0.1",
    "readline-sync": "^1.4.9"
  },
  "gypfile": true,
  "homepage": "https://github.com/mmhunter/node-sync-ipc",
  "keywords": [
    "child_process",
    "sync",
    "synchronous",
    "ipc",
    "message"
  ],
  "license": "MIT",
  "main": "index.js",
  "name": "node-sync-ipc",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/mmhunter/node-sync-ipc.git"
  },
  "scripts": {
    "install": "node-gyp rebuild",
    "test": "mocha test/*/parent.js --timeout 5000"
  },
  "types": "index.d.ts",
  "version": "2.1.2"
}
