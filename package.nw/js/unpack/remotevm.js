'use strict';const VM=require('vm'),fs=require('fs'),path=require('path'),inspector=require('inspector'),syncSDKList={getSystemInfo:!0,getBackgroundAudioState:!0,setBackgroundAudioState:!0,operateBackgroundAudio:!0,createRequestTask:!0,createUploadTask:!0,createDownloadTask:!0,createSocketTask:!0,operateSocketTask:!0,createAudioInstance:!0};function isSyncSDK(a){return!!syncSDKList[a]||/Sync$/.test(a)}const MAX_SYNC_TIME=10000,remoteLogPrefix='[REMOTE] ';var{fileSort,fileRootPath,tempFilePath,devVendorList,devVendorPath,isDev}=process.env;fileSort=JSON.parse(fileSort);let beginPort=1219,initPubLib=0;for(;;)try{inspector.open(beginPort);break}catch(a){beginPort++}const protectedConsole=Object.assign({},console);Object.freeze(protectedConsole);var vmGlobal={console:protectedConsole,nodeRequire:function(a){return require(path.join(fileRootPath,a))},setTimeout:setTimeout,setInterval:setInterval},jsVm=VM.createContext(vmGlobal);process.on('message',(a)=>{let{cliMsg:b,type:c}=a;console.warn(`${remoteLogPrefix} receive msg id: ${b.id}`),'handleAddInterface'===c?handleAddInterface(b):'handleEvaluateJavascript'===c&&handleEvaluateJavascript(b)});function sendMsgToCli(a){process.send({type:'sendMsgToCli',data:a})}function handleEvaluateJavascript(a){let b=a.pubLib,c=a.script;const d=a.callbackId;let e;console.log(a),1==initPubLib?(initPubLib++,fileSort.forEach((a)=>{let b=`
        var code = nodeRequire('${a}');
        var define = this.define
        var require = this.require
        var App = this.App
        var Page = this.Page
        var getApp = this.getApp
        var wx = this.wx

        code(define, require, App, Page, getApp, wx)`;try{e=VM.runInContext(b,jsVm)}catch(a){console.error(`[remoteLogPrefix] run appservice error ${a}`)}}),c='var a = 100;',console.warn(`${remoteLogPrefix} run init appservice.js`)):c&&0<c.indexOf('!__wxRouteBegin')?c=c.replace('!__wxRouteBegin','false').replace('__wxRouteBegin','var __wxRouteBegin'):b&&(0==initPubLib?(c=fs.readFileSync(path.join(devVendorPath,'publib_ios.js'),'utf8'),c=c.replace('!__wxRouteBegin','false').replace('__wxRouteBegin','var __wxRouteBegin'),console.warn(`${remoteLogPrefix} run init pubLib.js`),initPubLib++):c='var a = 10');try{e=VM.runInContext(c,jsVm)}catch(a){console.error(`[remoteLogPrefix] run vm error ${a}`)}console.log('ret :',e),'object'==typeof e&&(e=''),sendMsgToCli({callbackId:d,event:'evaluateCallback',ret:'undefined'==typeof e?'':JSON.stringify(e)})}function handleAddInterface(a){const b=a.name,c=a.methods,d={};c.forEach((a)=>{d[a.name]=function(){function b(b=0){sendMsgToCli({event:'callInterface',method:a.name,args:Array.prototype.slice.call(c),callbackId:b})}let c=arguments,d=arguments[0];if('invokeHandler'===a.name&&isSyncSDK(d)){let a=arguments[2];b(a);let c=Date.now(),e=!1,f=path.join(tempFilePath,`${a}`);for(;!fs.existsSync(f);)if(Date.now()-c>MAX_SYNC_TIME){console.error(`call sync api ${d} time out`),e=!0;break}if(console.warn(`${remoteLogPrefix} sync api ${d} cost time : ${Date.now()-c}`),!e){let a=fs.readFileSync(f,'utf8');return fs.unlinkSync(f),a}return JSON.stringify({errMsg:`${d}:fail sync timeout`})}b()}}),vmGlobal[b]=d}process.send({type:'vm_init',url:inspector.url()}),console.warn(`${remoteLogPrefix} inspector url ${inspector.url()}`);